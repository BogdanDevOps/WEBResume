import json
import requests
from django.http import JsonResponse, HttpResponse
from django.views.decorators.csrf import csrf_exempt

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram –±–æ—Ç–∞ (–∂–µ—Å—Ç–∫–æ –∑–∞—à–∏—Ç—ã–µ –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã)
BOT_TOKEN = "7426618022:AAF1awnWsXviu22F6AkB6we4GdDFFibuMvI"
CHAT_ID = 755874397

@csrf_exempt
def send_message(request):
    """
    –ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram.
    """
    print(f"–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å: {request.method}")
    
    # –î–æ–±–∞–≤–ª—è–µ–º CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –ª—é–±–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
    response_headers = {
        'Access-Control-Allow-Origin': '*',
        'Access-Control-Allow-Methods': 'POST, GET, OPTIONS',
        'Access-Control-Allow-Headers': 'Content-Type',
    }
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ preflight OPTIONS –∑–∞–ø—Ä–æ—Å–æ–≤
    if request.method == 'OPTIONS':
        print("–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º OPTIONS –∑–∞–ø—Ä–æ—Å")
        response = HttpResponse()
        for key, value in response_headers.items():
            response[key] = value
        return response
    
    if request.method != 'POST':
        print(f"–ü–æ–ª—É—á–µ–Ω –Ω–µ POST –∑–∞–ø—Ä–æ—Å: {request.method}")
        return JsonResponse({
            'success': False,
            'message': '–¢–æ–ª—å–∫–æ POST –∑–∞–ø—Ä–æ—Å—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è'
        }, status=400, headers=response_headers)
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∑–∞–ø—Ä–æ—Å–∞
        body = request.body.decode('utf-8')
        print(f"–¢–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞: {body}")
        
        data = json.loads(body)
        print(f"–î–∞–Ω–Ω—ã–µ: {data}")
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—è —Ñ–æ—Ä–º—ã
        sender_name = data.get('sender_name', '')
        sender_email = data.get('sender_email', '')
        message_text = data.get('message', '')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –ø–æ–ª–µ–π
        if not all([sender_name, sender_email, message_text]):
            missing = []
            if not sender_name: missing.append('sender_name')
            if not sender_email: missing.append('sender_email')
            if not message_text: missing.append('message')
            
            print(f"–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è: {missing}")
            return JsonResponse({
                'success': False,
                'message': f'–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è: {", ".join(missing)}'
            }, status=400, headers=response_headers)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram
        telegram_text = f"üì© –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!\n\nüë§ –û—Ç: {sender_name}\nüìß Email: {sender_email}\n\nüí¨ –°–æ–æ–±—â–µ–Ω–∏–µ:\n{message_text}"
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
        telegram_url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
        telegram_payload = {
            'chat_id': CHAT_ID,
            'text': telegram_text,
        }
        
        print(f"–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ Telegram: {telegram_url}")
        print(f"–î–∞–Ω–Ω—ã–µ –¥–ª—è Telegram: {telegram_payload}")
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ Telegram API
        response = requests.post(telegram_url, json=telegram_payload, timeout=10)
        
        print(f"–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞ Telegram: {response.status_code}")
        print(f"–û—Ç–≤–µ—Ç Telegram: {response.text}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–∫–∏
        if response.status_code == 200:
            telegram_data = response.json()
            if telegram_data.get('ok'):
                print("–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram!")
                return JsonResponse({
                    'success': True,
                    'message': '–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram!'
                }, headers=response_headers)
        
        # –ï—Å–ª–∏ –¥–æ—à–ª–∏ —Å—é–¥–∞, –∑–Ω–∞—á–∏—Ç –±—ã–ª–∞ –æ—à–∏–±–∫–∞
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram: {response.text}")
        return JsonResponse({
            'success': False,
            'message': f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram: {response.text}'
        }, status=500, headers=response_headers)
        
    except json.JSONDecodeError as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ JSON: {e}")
        return JsonResponse({
            'success': False,
            'message': f'–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö: {str(e)}'
        }, status=400, headers=response_headers)
        
    except requests.RequestException as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞ –≤ Telegram: {e}")
        return JsonResponse({
            'success': False,
            'message': f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞ –≤ Telegram: {str(e)}'
        }, status=500, headers=response_headers)
        
    except Exception as e:
        print(f"–ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return JsonResponse({
            'success': False,
            'message': f'–ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {str(e)}'
        }, status=500, headers=response_headers) 